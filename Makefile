# Compiler and flags
CC = gcc
CFLAGS = -Wall -Wextra -Iinclude -MMD -MP
LDFLAGS = -lm

# Directories
SRC_DIR = src
INCLUDE_DIR = include
BUILD_DIR = build

# Automatically find all .c files in src/
SOURCES = $(wildcard $(SRC_DIR)/*.c)
# Convert src/file.c -> build/file.o
OBJECTS = $(patsubst $(SRC_DIR)/%.c,$(BUILD_DIR)/%.o,$(SOURCES))
# Dependency files for automatic header tracking
DEPS = $(OBJECTS:.o=.d)

# Target executable
TARGET = main

# Default target
all: $(TARGET)

# Build target executable
$(TARGET): $(OBJECTS) | $(BUILD_DIR)
	$(CC) $(OBJECTS) -o $(TARGET) $(LDFLAGS)
	@echo "Build complete: $(TARGET)"

# Compile source files and generate dependencies
$(BUILD_DIR)/%.o: $(SRC_DIR)/%.c | $(BUILD_DIR)
	$(CC) $(CFLAGS) -c $< -o $@

# Create build directory
$(BUILD_DIR):
	mkdir -p $(BUILD_DIR)

# Include dependency files (auto-generated by -MMD -MP)
-include $(DEPS)

# Clean build artifacts
clean:
	rm -rf $(BUILD_DIR) $(TARGET)

# Rebuild everything
rebuild: clean all

# Phony targets
.PHONY: all clean rebuild
